version: '3.9'

services:

  stack_and_capital_handler:
      image: pysystem_image
      build:
        context: ./pysystemtrade
        dockerfile: ./Dockerfile
        args:
          GIT_TOKEN: ${GIT_TOKEN}
          SCRIPT_PATH: ${SCRIPT_PATH}
      container_name: stack_and_capital_handler${NAME_SUFFIX}
      restart: on-failure
      environment:
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
        PYSYS_CODE: ${PYSYS_CODE}
      command: ["/bin/bash", "-c", "command_scripts/stack_and_capital_handler_container_commands.bash"]
      depends_on:
        - ib_gateway
        - mongo_db
      networks:
        channel:
          ipv4_address: ${IPV4_NETWORK_PART}0.4
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  daily_processes:
      image: pysystem_image
      container_name: daily_process${NAME_SUFFIX}
      environment:
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
        PYSYS_CODE: ${PYSYS_CODE}
      command: ["/bin/bash", "-c", "command_scripts/daily_processes_commands.bash"]
      depends_on:
        - ib_gateway
        - mongo_db
        - stack_and_capital_handler   # needed to avoid building same image twice
      volumes:
        - ./reports:/home/reports
        - ./backtests:/home/backtests
      networks:
        channel:
          ipv4_address: ${IPV4_NETWORK_PART}0.8
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  ib_gateway:
      build:
        context: ./ib_gateway
        dockerfile: ./Dockerfile
      container_name: ib_gateway${NAME_SUFFIX}
      restart: always
      ports:
        - "4002:4002"
        - "5900:5900"
      environment:
        TWSUSERID: ${TWSUSERID}
        TWSPASSWORD: ${TWSPASSWORD}
      networks:
        channel:
          ipv4_address: ${IPV4_NETWORK_PART}0.3
      logging:
        options:
          max-size: "1m"
          max-file: "2"

  mongo_db:
      container_name: mongo_db${NAME_SUFFIX}
      image: mongo
      restart: on-failure
      volumes:
        - mongo_db:/data/db
        - mongo_conf:/data/configdb
      networks:
        channel:
          ipv4_address: ${IPV4_NETWORK_PART}0.2
      logging:
        options:
          max-size: "5m"
          max-file: "3"

  jupyter:
      build:
        context: jupyter
        dockerfile: ./Dockerfile
        args:
          GIT_TOKEN: add_personal_access_token_here
      container_name: jupyter${NAME_SUFFIX}
      restart: always
      ports:
        - "8888:8888"
      volumes:
        - ./reports:/home/reports
        - ./csv_backup:/home/csv_backup
        - ./backtests:/home/backtests
      depends_on:
        - ib_gateway
        - mongo_db
      networks:
        channel:
          ipv4_address: ${IPV4_NETWORK_PART}0.6
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  csv_backup:
      profiles: ["csv_backup"]
      image: pysystem_image
      depends_on:
        - stack_and_capital_handler   # needed to avoid building same image twice
      volumes:
        - ./csv_backup:/home/csv_backup
      command: ["/bin/bash", "-c", "command_scripts/csv_backup_commands.bash"]
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  db_backup:
      profiles: ["db_backup"]
      image: alpine
      volumes:
        - mongo_db:/data/db
        - mongo_conf:/data/configdb
        - ./db_backup:/backup
      command: sh -c "tar -cvf /backup/backup_db.tar /data/db; tar -cvf /backup/backup_conf.tar /data/configdb"
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  db_restore:
      image: alpine    
      profiles: ["restore"]
      volumes:
        - mongo_db:/data/db
        - mongo_conf:/data/configdb
        - ./db_backup:/backup
      command: sh -c "cd /data/ && tar -xvf /backup/backup_db.tar --strip 1; cd /data/ && tar -xvf /backup/backup_conf.tar --strip 1"
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

volumes:
  mongo_db:
    name: mongo_db_volume${NAME_SUFFIX}
  mongo_conf:
    name: mongo_conf_volume${NAME_SUFFIX}

networks:
  channel:
    driver: bridge
    name: channel${NAME_SUFFIX}
    ipam:
      config:
        - subnet: ${IPV4_NETWORK_PART}0.0/16
          gateway: ${IPV4_NETWORK_PART}0.1


 # Backup concept; https://stackoverflow.com/a/56432886/1020693
 # about profile; https://docs.docker.com/compose/profiles/, https://stackoverflow.com/a/65957695/1020693

